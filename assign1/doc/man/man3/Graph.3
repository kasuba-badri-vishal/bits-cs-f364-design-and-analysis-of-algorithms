.TH "Graph" 3 "Sun Feb 23 2020" "Version 1" "DAA Assign-1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Graph \- This Program is the Implementation of \fBKosaraju Algorithm\fP\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBGraph\fP (int \fBnV\fP, int \fBnE\fP)"
.br
.RI "This is Constructor for the graph indicating nodes and edges\&. "
.ti -1c
.RI "void \fBinsertEdge\fP (int a, int b)"
.br
.ti -1c
.RI "\fBGraph\fP \fBreverseGraph\fP ()"
.br
.ti -1c
.RI "void \fBtopological_sort\fP (int vertex)"
.br
.ti -1c
.RI "void \fBDFS\fP (int vertex)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "int \fBnV\fP"
.br
.ti -1c
.RI "int \fBnE\fP"
.br
.ti -1c
.RI "map< int, list< int > > \fBadj\fP"
.br
.ti -1c
.RI "unordered_set< int > \fBvisited\fP"
.br
.ti -1c
.RI "unordered_set< int > \fBDFSvisited\fP"
.br
.ti -1c
.RI "set< int, greater< int > > \fBvertices\fP"
.br
.ti -1c
.RI "stack< int > \fBTop_order\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This Program is the Implementation of \fBKosaraju Algorithm\fP\&. 

We use two \fIDFS\fP algorithmic searches to find the \fBConnected Components\fP\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Graph::Graph (int nV, int nE)\fC [inline]\fP"

.PP
This is Constructor for the graph indicating nodes and edges\&. nodes are vertices and edges are connections\&. This is similar to \fBinsertEdge()\fP ### Example 
.PP
.nf
Graph(int nV,int nE) { // constructor
    this->nV = nV;
    this->nE = nE;
}

.fi
.PP
 
.PP
\fBParameters:\fP
.RS 4
\fInV\fP : Number of Vertices 
.br
\fInE\fP : Number of Edges 
.RE
.PP
\fBReturns:\fP
.RS 4
nothing is returned 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBinsertEdge()\fP \fBmain()\fP 
.RE
.PP
\fBNote:\fP
.RS 4
This is a constructor 
.RE
.PP
\fBAttention:\fP
.RS 4
This is constructor for the graph 
.RE
.PP
\fBWarning:\fP
.RS 4
It is required to specify nV and nE 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Graph::DFS (int vertex)\fC [inline]\fP"

.SS "void Graph::insertEdge (int a, int b)\fC [inline]\fP"

.SS "\fBGraph\fP Graph::reverseGraph ()\fC [inline]\fP"

.SS "void Graph::topological_sort (int vertex)\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "map<int,list<int> > Graph::adj"

.SS "unordered_set<int> Graph::DFSvisited"

.SS "int Graph::nE"

.SS "int Graph::nV"

.SS "stack<int> Graph::Top_order"

.SS "set<int,greater<int> > Graph::vertices"

.SS "unordered_set<int> Graph::visited"


.SH "Author"
.PP 
Generated automatically by Doxygen for DAA Assign-1 from the source code\&.
